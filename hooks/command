#!/bin/bash
set -euo pipefail

cluster=${BUILDKITE_PLUGIN_ECS_DEPLOY_CLUSTER?}
task_family=${BUILDKITE_PLUGIN_ECS_DEPLOY_TASK_FAMILY?}
service_name=${BUILDKITE_PLUGIN_ECS_DEPLOY_SERVICE?}
image=${BUILDKITE_PLUGIN_ECS_DEPLOY_IMAGE?}
task_definition=${BUILDKITE_PLUGIN_ECS_DEPLOY_TASK_DEFINITION?}
desired_count=${BUILDKITE_PLUGIN_ECS_DEPLOY_DESIRED_COUNT:-"1"}
task_role_arn=${BUILDKITE_PLUGIN_ECS_DEPLOY_TASK_ROLE_ARN:-""}

function create_service() {
    local cluster_name=$1
    local task_definition=$2
    local service_name=$3
    local desired_count=$4

    service_defined=$(aws ecs describe-services --cluster "$cluster_name" --service "$service_name" --query 'services[*].status' --output text |wc -l)
    if [[ $service_defined -eq 0 ]]; then
        echo "--- :ecs: Creating a Service $service_name in cluster $cluster_name"
        aws ecs create-service --cluster "$cluster_name" --service-name "$service_name" --task-definition "$task_definition" --desired-count "$desired_count"
    fi
}

## This is the template definition of your containers
container_definitions_json=$(jq --arg IMAGE "$image" \
'.[0].image=$IMAGE' \
"$task_definition"
)

echo "jq --arg IMAGE $image \
'.taskDefinition.containerDefinitions[0].image=\$IMAGE' \
$task_definition" > /tmp/foo

echo "--- :ecs: Registering new task definition for ${task_family}"
register_command="aws ecs register-task-definition \
    --family ${task_family} \
    --container-definitions '$container_definitions_json'"

if [[ -n "${task_role_arn}" ]]; then
    register_command+=" --task-role-arn ${task_role_arn}"
fi
json_output=$(eval "$register_command")
register_exit_code=$?

if [[ $register_exit_code -ne 0 ]] ; then
  echo "+++ ^^^"
  echo "+++ Failed to register task defintion"
  exit "$register_exit_code"
fi

task_revision=$(jq '.taskDefinition.revision' <<< "$json_output")
echo "Registered ${task_family}:${task_revision}"

# Create service if it doesn't already exist
create_service "$cluster" "${task_family}:${task_revision}" "$service_name" "$desired_count"

echo "--- :ecs: Updating service for ${service_name}"
aws ecs update-service \
  --cluster "${cluster}" \
  --service "${service_name}" \
  --task-definition "${task_family}:${task_revision}"

## Now we wait till it's stable
echo "--- :ecs: Waiting for services to stabilize"
aws ecs wait services-stable \
  --cluster "${cluster}" \
  --services "${service_name}"

aws ecs describe-services \
  --cluster "${cluster}" \
  --service "${service_name}"

echo "+++ :ecs: Service is up ðŸš€"
